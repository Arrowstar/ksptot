function [f,g,nec,x0,xlb,xub,xstar] = fsuite( x, pnum, ~ )%% FSUITE Function evaluations for sqp.m optimization test problems%%--Usage%%  [f,g] = fsuite( x, pnum )%  [f,g,nec,x0,xlb,xub] = fsuite( [], pnum )%%--Inputs%%  x........ Design variable vector%  pnum..... Problem number%%--Outputs%% If x==[]:%  f........ number of design variables for problem "pnum"%  g........ number of constraints for problem "pnum"%  nec...... Number of equality constraints%  x0....... An initial default starting design vector%  xlb,xub.. Lower and upper bounds on x%  xstar.... Optimal solution, if known% Otherwise:%  f........ Objective function value evaluated at x%  g........ Constraint function values evaluated at x%%  Written by:      Robert A. Canfield%  Created:         2/20/95%  Modified         11/3/19%--Modifications%%   3/13/95 - Added Spillman & chopper problems%             Return problem definition if x==[]%   3/26/95 - Define x0,xlb,xub%   3/28/95 - Equality constraint for #13%   9/21/00 - Fix MatLab 5.2 warnings%   11/3/19 - Avoid Octave warnings%--Local variables%%  nx....... Number of design variables in each problem%  ng....... Number of constraints in each problem%  nh....... Number of equality constraints in each problem%--BEGIN%%  Display/return number of variables and constraints if x is null.%nx=[2 2 2 5 3, 7 2 2 2 2,  2 3 2 3 2, 4 7 8  2 6 6];ng=[3 2 2 1 1,11 3 0 1 1,  1 2 1 2 2, 3 6 6  2 2 2];nh=[zeros(1,12) 1 zeros(1,6) 1 1];if nargout==0   ndv=nx(pnum), nConstraints=ng(pnum), nEquality=nh(pnum) %#ok<*NASGU>   return, elseif isempty(x)   f=nx(pnum); ndv=f;   g=ng(pnum);   nec=nh(pnum);	x0=ones(ndv,1);	xlb=[];	xub=[];	if pnum==1	elseif pnum==2		x0=[1 1];		xlb=[.2 .1];		xub=[4 1.6];	elseif pnum==3		xlb=eps*x0;	elseif pnum==4		x0=5*ones(1,ndv);		xlb=x0/50;	elseif pnum==5		x0=[1 1 1];		xlb=[0 0 0];	elseif pnum==6%		x0=[3.1 .75 22.5 7.8 7.8 3.4 5.25];		xlb=[2.6 .7 17 7.3 7.3 2.9 5];		xub=[3.6 .8 28 8.3 8.3 3.9 5.5];		x0=(xlb+xub)/2;	elseif pnum==7	elseif pnum==8		x0=[1 1];		xstar=[125 100];	elseif pnum==9	elseif pnum==10	elseif pnum==11	elseif pnum==12	elseif pnum==13	elseif pnum==14	elseif pnum==15		x0=[1 1];		xlb=0;	elseif pnum==16		xlb=zeros(size(x0));	elseif pnum==17		xlb=x0/10; xlb(7)=0.01;		xub=x0*10;	elseif pnum==18		xlb=x0/10;		xub=x0*10;	elseif pnum==19	elseif pnum==20 || pnum==21      x0= [200 2500 150 1500 0.8 0.5];		xlb=zeros(size(x0));		xub=[500 5000 300 4000 1.6 1];	else		pnum %#ok<*NOPRT>		error('Bad pnum')	end	if length(x0)~=ndv, error('Oops! x0 wrong size'), end   returnendif length(x(:))~=nx(pnum), x,ndv=nx(pnum),error('# variables do not match'),end%  CASE of problem number.%%   First 16 problems are from Venkayya & Tischler.%%   problem 1:if pnum==1      f = 10*x(1) + x(2);      g(1) = 2*x(1) - x(2) - 1;      g(2) = x(1) - 2*x(2) + 1;      g(3) = 2*x(1) - x(1)^2 + 2*x(2) - 1;%%   problem 2:elseif pnum==2      f = x(1)*sqrt(1 + x(2)^2);      g(1) = 1 - 0.124*sqrt(1 + x(2)^2)*(8/x(1) + 1/(x(1)*x(2)));      g(2) = 1 - 0.124*sqrt(1 + x(2)^2)*(8/x(1) - 1/(x(1)*x(2)));%%   problem 3:elseif pnum==3      f = 4*x(1) + x(2);      g(1) = 1 - 16/(x(2) + 0.25*x(1));      g(2) = 1 - sqrt(3.0)/(3*x(1)) - 2/(x(2) + 0.25*x(1));%%   problem 4:elseif pnum==4      f = 0.0624*(x(1) + x(2) + x(3) + x(4) + x(5));      g(1) = 1 - 61/x(1)^3 - 37/x(2)^3 - 19/x(3)^3 - 7/x(4)^3 - 1/x(5)^3;%%   problem 5:elseif pnum==5      f = 20*x(2)*x(3) + 30*x(1)*x(3) + 15*x(1)*x(2);      g(1) = 125 - x(1)*x(2)*x(3);%%   problem 6:elseif pnum==6      f = 0.7854*x(1)*(x(2)^2)*(3.3333*x(3)^2 + 14.9334*x(3) - 43.0934) ...;          - 1.508*x(1)*(x(6)^2 + x(7)^2) + 7.477*(x(6)^3 + x(7)^3) ...          + 0.7854*(x(4)*x(6)^2 + x(5)*x(7)^2);      g(1) = 1 - 27*(x(1)^(-1))*(x(2)^(-2))*(x(3)^(-1));      g(2) = 1 - 397.5*(x(1)^(-1))*(x(2)^(-2))*(x(3)^(-2));      g(3) = 1 - 1.93*(x(2)^(-1))*(x(3)^(-1))*(x(4)^3)*(x(6)^(-4));      g(4) = 1 - 1.93*(x(2)^(-1))*(x(3)^(-1))*(x(5)^3)*(x(7)^(-4));      g(5) = 1100 - (((745*x(4)/(x(2)*x(3)))^2 + 16.9*10^6)^.5)/(0.1*x(6)^3);      g(6) = 850 - (((745*x(5)/(x(2)*x(3)))^2 + 157.5*10^6)^.5)/(0.1*x(7)^3);      g(7) = 40 - x(2)*x(3);      g(8) = x(1)/x(2) - 5;      g(9) = 12 - x(1)/x(2);      g(10) = 1 - (1.5*x(6) + 1.9)*x(4)^(-1);      g(11) = 1 - (1.1*x(7) + 1.9)*x(5)^(-1);%%   problem 7:elseif pnum==7      f = x(1)*x(2);      g(1) = x(1)*x(2)^2 - 2.4e7;      g(2) = x(1)*x(2) - 1.125e5;      g(3) = 2*x(1) - x(2);%%   problem 8:elseif pnum==8      f = 50*x(1) + 40*x(2);      g=[];%%   problem 9:elseif pnum==9      f = (x(1) - 1)^2 + (x(2) - 1)^2;      g(1) = 2 - x(1) - 2*x(2);%%   problem 10:elseif pnum==10      f = (x(1) - 3)^2 + (x(2) - 3)^2;      g(1) = 5 - x(1) - x(2);%%   problem 11:elseif pnum==11      f = (x(1) - 1)^2 + (x(2) - 1)^2 - 2*x(2) + 2.0;      g(1) = 4 - x(1) - x(2);%%   problem 12:elseif pnum==12      f = x(1)^2 + x(2)^2 + x(3)^2;      g(1) = x(1) + x(2)  - 10;      g(2) = x(2) + 2*x(3) - 8;%%   problem 13:elseif pnum==13      f = 4*x(1)^2 + 3*x(2)^2 - 5*x(1)*x(2) - 8*x(1);      g(1) = x(1) + x(2) - 4;%%   problem 14:elseif pnum==14      f = x(1)^2 + x(2)^2 + x(3)^2;      g(1) = 1 - 16/x(1)^2 - 16/x(2)^2;      g(2) = 1 - 16/x(2)^2 - 16/x(3)^2;%%   problem 15:elseif pnum==15      f = x(1) + 2*x(2);      g(1) = 1 - 1/x(1);      g(2) = 1 - 1.5/(x(2) + x(1)/4);%%   problem 16:elseif pnum==16      f = x(1)^2-5*x(1)+x(2)^2-5*x(2) + 2*x(3)^2-21*x(3)+x(4)^2+7*x(4) + 50;      g(1) = 8-x(1)^2 - x(1) - x(2)^2 + x(2) - x(3)^2 - x(3) - x(4)^2 + x(4);      g(2) = 10 - (x(1)^2 - x(1)) - 2*x(2)^2 - x(3)^2 - (2*x(4)^2 - x(4));      g(3) = 5 - (2*x(1)^2+2*x(1)) - (x(2)^2-x(2)) - x(3)^2 - x(4);%%   problem 17:elseif pnum==17      f = 10*x(1)*(x(2)^(-1))*(x(4)^2)*(x(6)^(-3))*(x(7)^.125) ...          + 15*(x(1)^(-1))*(x(2)^(-2))*x(3)*x(4)*(x(5)^(-1))*x(7)^(-0.5) ...          + 20*(x(1)^(-2))*x(2)*(x(4)^(-1))*(x(5)^(-2))*x(6) ...          + 25*(x(1)^2)*(x(2)^2)*(x(3)^(-1))*(x(5)^0.5)*(x(6)^(-2))*x(7);      g(1) = 1.0 - 0.5*(x(1)^0.5)*(x(3)^(-1))*(x(6)^(-2))*x(7) ...            - 0.7*(x(1)^3)*x(2)*(x(3)^(-2))*x(6)*(x(7)^0.5) ...            - 0.2*(x(2)^(-1))*x(3)*(x(4)^(-0.5))*(x(6)^(2.0/3.0))*(x(7)^0.25);%      g(2) = 1.0 - 1.3*(x(1)^(-0.5))*x(2)*(x(3)^(-1))*(x(5)^(-1))*x(6) ...             - 0.8*x(3)*(x(4)^(-1))*(x(5)^(-1))*(x(6)^2) ...            - 3.1*(x(1)^(-1))*(x(2)^0.5)*(x(4)^(-2))*(x(5)^(-1))*(x(6)^(1.0/3.0));%      g(3) = 1.0 - 2*x(1)*(x(3)^(-1.5))*x(5)*(x(6)^(-1))*(x(7)^(1.0/3.0)) ...            - 0.1*x(2)*(x(3)^(-0.5))*x(5)*(x(6)^(-1))*(x(7)^(-0.5)) ...            - (x(1)^(-1))*x(2)*(x(3)^0.5)*x(5) ...            - 0.65*(x(2)^(-2))*x(3)*x(5)*(x(6)^(-1))*x(7);%      g(4) = 1.0 - 0.2*(x(1)^(-2))*x(2)*(x(4)^(-1))*(x(5)^0.5)*(x(7)^(1.0/3.0)) ...            - 0.3*(x(1)^0.5)*(x(2)^2)*x(3)*(x(4)^(1.0/3.0))*(x(7)^0.25) ...             *(x(5)^(-2.0/3.0)) ...            - 0.4*(x(1)^(-3))*(x(2)^(-2))*x(3)*x(5)*(x(7)^0.75) ...            - 0.5*(x(3)^(-2))*x(4)*(x(7)^0.5);%      g(5) = f - 100;      g(6) = 3000 - f;% Two of Schittkowski's problems%%   problem 18:elseif pnum==18      y1 = 0.67;      f = (0.4*x(1)^y1)*(x(7)^(-y1)) + (0.4*x(2)^y1)*(x(8)^(-y1)) + 10-x(1)-x(2);      g(1) = 1.0 - 0.0588*x(5)*x(7) - 0.1*x(1);      g(2) = 1.0 - 0.0588*x(6)*x(8) - 0.1*x(1) - 0.1*x(2);      g(3) = 1.0 - 4*x(3)/x(5) - 2*(x(3)^(-0.71))/x(5) - 0.0588*(x(3)^(-1.3))*x(7);      g(4) = 1.0 - 4*x(4)/x(6) - 2*(x(4)^(-0.71))/x(6) - 0.0588*(x(4)^(-1.3))*x(8);      g(5) = f - 0.1;      g(6) = 4.2 - f;% Mark Spillman's problemelseif pnum==19	f = exp(x(1))*(4*x(1)^2+2*x(2)^2+4*x(1)*x(2)+2*x(2)+1);	g(1)=1.5+x(1)*x(2)-x(1)-x(2);	g(2)=-x(1)*x(2)-10;% chopper problem from Ed Pohl's Mech 620 student.elseif pnum==20 || pnum==21	f=-((x(4)+x(2)*sin(x(5)-pi*x(3)/2700)*x(1))-16*x(1)^2+(x(2)*cos(x(5)-pi*x(3)/2700)+x(3))*x(1)-(x(2)*x(1)+x(4)^(x(4)/2000))*x(6));	g(1)=x(6)-(2^(x(2)/5000)-1)^4;	g(2)=-x(2)*sin(x(5))*x(1)+16*x(1)^2;   if nh(pnum)==0, g(3)=-g(1); ng=3; endelse	pnum	error('Bad pnum')endif pnum<=18 && ~isempty(g), g=-g; endif length(g)~=ng(pnum), pnum,ng,g, error('Wrong # constraints'), end